import React, { useState } from 'react';
import Layout from '@/components/layout/Layout';

interface ExploitResearch {
  title: string;
  description: string;
  findings: string;
  date: string;
}

const initialExploits = [
  {
    title: 'CVE-2025-12345: Remote Code Execution in WebAppX',
    description: 'A critical RCE vulnerability in WebAppX allows attackers to execute arbitrary code via a crafted HTTP request.',
  },
  {
    title: 'CVE-2025-67890: Privilege Escalation in Linux Kernel',
    description: 'A flaw in the Linux kernel enables local users to gain root privileges through improper input validation.',
  },
  {
    title: 'CVE-2025-11111: SQL Injection in E-Commerce Platform',
    description: 'SQL injection vulnerability in the checkout module of a popular e-commerce platform exposes sensitive customer data.',
  },
];

const ExploitResearchPage: React.FC = () => {
  const [selectedExploit, setSelectedExploit] = useState<number | null>(null);
  const [findings, setFindings] = useState('');
  const [userResearch, setUserResearch] = useState<ExploitResearch[]>([]);
  const [published, setPublished] = useState(false);

  const handlePublish = () => {
    if (selectedExploit !== null && findings.trim()) {
      setUserResearch([
        ...userResearch,
        {
          title: initialExploits[selectedExploit].title,
          description: initialExploits[selectedExploit].description,
          findings,
          date: new Date().toISOString().slice(0, 10),
        },
      ]);
      setFindings('');
      setPublished(true);
      setTimeout(() => setPublished(false), 2000);
    }
  };

  return (
    <Layout>
      <div className="container mx-auto p-6">
        <h1 className="text-3xl font-extrabold text-blue-400 mb-6">Exploit Research Portal</h1>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
          <div>
            <h2 className="text-xl font-bold text-blue-200 mb-4">Browse Exploits</h2>
            <ul className="space-y-4">
              {initialExploits.map((exp, idx) => (
                <li
                  key={exp.title}
                  className={`p-4 rounded-lg cursor-pointer border transition ${selectedExploit === idx ? 'bg-blue-900 border-blue-400' : 'bg-gray-900 border-gray-700'}`}
                  onClick={() => setSelectedExploit(idx)}
                >
                  <div className="font-semibold text-blue-300">{exp.title}</div>
                  <div className="text-blue-100 text-sm">{exp.description}</div>
                </li>
              ))}
            </ul>
          </div>
          <div>
            <h2 className="text-xl font-bold text-green-200 mb-4">Your Findings</h2>
            {selectedExploit !== null ? (
              <div className="mb-4">
                <div className="font-semibold text-blue-300 mb-1">{initialExploits[selectedExploit].title}</div>
                <textarea
                  className="w-full h-32 p-2 rounded bg-gray-900 text-blue-100 border border-blue-700 mb-2"
                  placeholder="Write your research, analysis, or notes..."
                  value={findings}
                  onChange={e => setFindings(e.target.value)}
                />
                <button
                  className="w-full bg-blue-700 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition"
                  onClick={handlePublish}
                  disabled={!findings.trim()}
                >
                  Publish Findings
                </button>
                {published && <div className="text-green-300 mt-2 text-xs">Findings published!</div>}
              </div>
            ) : (
              <div className="text-blue-300 text-xs">Select an exploit to start your research.</div>
            )}
          </div>
        </div>
        <div className="bg-gradient-to-br from-purple-900 to-blue-900 rounded-2xl shadow-xl p-6 mt-4">
          <h3 className="text-lg font-bold text-purple-200 mb-2">Your Published Research</h3>
          <ul className="text-purple-100 text-xs mb-2 max-h-40 overflow-y-auto">
            {userResearch.length === 0 ? (
              <li className="italic text-purple-300">No research published yet.</li>
            ) : (
              userResearch.map((r, i) => (
                <li key={i} className="mb-2">
                  <span className="font-semibold">{r.title}</span> <span className="text-purple-300">({r.date})</span>
                  <div className="text-purple-300">{r.description}</div>
                  <div className="text-purple-400">Findings: {r.findings}</div>
                </li>
              ))
            )}
          </ul>
        </div>
      </div>
    </Layout>
  );
};

export default ExploitResearchPage;
